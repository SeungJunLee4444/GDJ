
& exception 예외처리

& try-catch문에서 코드의 우선순위란?
& checked와 unchecked의 차이
=> java 라이브러리에 검색하면 부모 클래스 확인가능
=> runtime의 자식클래스면 생략가능, 아니면 무조건 작성
=> ioeexeption은 대표적인 checkedexception으로 무조건 try-catch문을 써야한다
ex) filenotfound(파일없음), 

* checked는 try-catch를 쓰지않으면 컴파일이 실행되지않는다(빨간줄에러)
unchecked는 컴파일은 되며 이후 stacktrace가 된다(오류가 표시)


1. 자바의 오류사항
1) nullpointer		: 없는 값으로 '메서드'를 사용할 때
* null값이 있다해서 무조건 이 오류가 발생하는건 아니다
2) numberformat		: '문자'값을 '숫자'로 바꾸려들때
ex) 

	System.out.println("나이 입력(선택) >>>");
	String strAge = sc.nextLine();
	
	int age;
	if(strAge.isEmpty()) {
		age = 0;
	} else {
		age = Integer.parseInt(strAge);
	}
	=> 만약 입력값이 "한글"이라면 숫자로 변환하지 못하고 오류발생 *
		
		
		
3) inputmismatch 	: 주로 scanner에서 저장할 타입에 맞지않는 값을 입력할 때
4) arithmetice		: 0으로 나누려들때 발생

---------------------------------------------------------------------------

2. 구조
1) try-catch
=> try에는 예외가 발생할 수 있는 코드를 넣고,
=> catch는 발생할 수 있는 예외사항 코드를 작성한다
* try에서 예외가 발생하면 try 이후의 코드들은 실행될 기회를 갖지 못하며,
해당 catch문의 예외도 출력되지않는다

2) finally
=> 예외가 있든 없든 try-catch문 마지막에 작성하는 블록
=> 주로 scanner과 filewriter, reader를 close할때 이 블록에 넣는다

3) throw

4) throws

3. 추가
1) checked exception과 unchecked exception
(1) checked exception은 try-catch문이 반드시 있어야한다
(2) unchecked exception은 runtimeexception의 자식클래스로 try-catch문이 생략 가능하다