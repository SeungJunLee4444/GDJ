[MVC 6장 정리]

& mvc에 적용가능한 프로그램
(1) 5장 : mybatis
(2) 6장 : schedular
(3)
(4)

##############################################

1. 서비스(클래스) 생성
- 학생 추가
- 학생 상세보기
- 학생 리스트 
- 학생 삭제

=============================================

2. 스캐줄러 패키지 생성(+)
- 리스너
- job		(어떤일을 할건지) 


=============================================

3. mybatis 연동 확인


=============================================

& 서비스만들기
1. 단순히 새로운 jsp 페이지 이동은 컨트롤러에 경로 만들기

<select>

4. StudentListService 서비스 만들기
1) XML에 쿼리문 작성
2) DAO에서 쿼리문 경로를 연결 후, DB의 데이터를 변수에 저장
3) Service 클래스에서 dao의 객체를 호출해 request 요청에 저장(속성메서드 사용)
4) 컨트롤러에서 해당 요청에 따른 service 선택 작성
5) 요청에 따른 경로 사이트 작성(list.do, list.jsp)

=============================================
<insert> 

5. 신규학생 등록하는 서비스 만들기
1) 신규학생 등록을 위한 페이지 이동
(1) list.jsp의 신규학생추가 버튼 클릭시 write.do로 이동하는 이벤트 생성
(2) 컨트롤러에서 write.do 단순이동을 위해 직접 actionforward 경로 작성
(3) 생성된 write.do에 학생명, 국어, 영어, 수학 데이터를 입력받아 데이터로 추가하는 태그문 작성
(4) 더하기 요청을 위한 쿼리문 작성(student.xml)
(5) 요청 시 db에서 신규학생을 추가할 studentdao 작성
(6) 신규학생 추가 서비스 클래스 작성
(6) 컨트롤러에 서비스 클래스에서 요청시 

2) 등록 페이지에서 등록 요청 
- 순서 : (write.do에서 요청 -> controller에서 해당 요청을 찾아서 실행 -> 
-> 서비스 클래스 실행
--> (1) 파라미터에 저장된 값들을 호출하여, db로 보낼 student dto 객체에 저장, insertStudent())
--> (2) 삽입성공 실패여부는 해당 클래스에서 호출, 데이터 삽입이니 반환값은 없음

-> DAO의 insertStudent 메서드를 실행하여, DB에 데이터 저장, 데이터 저장완료

=============================================

6. 평균범위에 따른 학생 조회 서비스 만들기
- 목적 : 평균범위의 시작값, 끝값을 요청하면 해당 범위의 평균값을 지닌 사람을 목록에 보여주기
- 입력한 데이터를 바탕으로 db를 조회하기 때문에,
입력한 값은 파라미터로 요청에 저장하여 db로 접근해야한다

1) 쿼리문 작성
2) DAO 작성
3) FIND 서비스 작성

----------
& 특이사항
1) <![CDATA[내용]]> : 해당 범위 안에 있는 모든 내용을 일반문자로 인식하게 만들어준다
2) 제네릭			: 타입 작성시 소문자 사용불가능(double -> Double)
3) <input type="button" : 버튼이 서브밋 타입이 아니기 때문에, event.preventDefault()를 쓸 필요없음
4) Uncaught SyntaxError : 자바스크립트 문법오류
5) 요청받은 파라미터 값을 가져오기 위해서는 map을 사용한다(파라미터-키, 파라미터값-속성)

=============================================

<delete>

7. 삭제
- 목적 : 학번을 전달해 원하는 학생을 목록 상에서 제거
=> 학번은 파라미터로 전달

1) 쿼리문 작성   : & db접근시 조건이 되는 쿼리문들을 작성함 **(일종의 dao영역)
2) DAO 작성      : & mybatis의 메서드를 이용해 db에 접근		
3) 서비스 작성   : 해당 요청에 맞는 서비스 작성
4) 컨트롤러 작성 : 요청에 맞는 서비스를 찾아서 실행



















2) DAO
* XML의 쿼리문 수와 동일한 메서드 생성

