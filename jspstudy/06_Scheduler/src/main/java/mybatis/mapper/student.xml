<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- namespace="mapper" 의 패키지 경로 : 맵퍼의 이름-->
  
<mapper namespace="mybatis.mapper.student">

<!--  & 요청받을떄는 parametertype, 반환할떄는 resulttype**************************

 -->
 
 	<!-- 1. 학생목록 학생을 반환하니 student -->
 	<select id="selectAllStudents" resultType="Student">
		SELECT STU_NO, NAME, KOR, ENG, MATH, AVE, GRADE
		  FROM STUDENT
		 ORDER BY STU_NO
	</select>
 	
 	<!-- 2. 전체학생수 : 학생수를 반환하니 int-->
 	<select id="selectAllStudentsCount" resultType="int">
 		SELECT COUNT(*)
 		  FROM STUDENT
 	</select>
 	<!-- => 쿼리문에서 count는 값이 없으면 0을 반환(오류없음) -->
 	
 	<!-- 3. 전체 평균 : 평균점수를 반환하니 double -->
 	<select id="selectAllStudentsAverage" resultType="double">
		SELECT NVL(AVG(AVE), 0)
		  FROM STUDENT
	</select>
 	<!-- => 쿼리문은 평균, 최대, 최소, 합계는 없으면 'null'값을 반환 
 		 => 해결 : NVL 함수를 이용
 	-->
 	
 <!--////////////////////////////////////////////////////////////////////////////////////////////////  -->
 	
 	<!-- 4. 학생등록 : 값이 추가되어야함, 만든 변수에 입력요청한 데이터를 저장하는 구조 -->
 	<insert id="insertStudent" parameterType="Student">
 		INSERT INTO STUDENT
 			(STU_NO, NAME, KOR, ENG, MATH, AVE, GRADE)
 		VALUES
 			(STUDENT_SEQ.NEXTVAL, #{name}, #{kor}, #{eng}, #{math}, #{ave}, #{grade})
 	</insert>
 	
 <!--////////////////////////////////////////////////////////////////////////////////////////////////  -->

	<!-- 5. 평균범위조회 : write의 begin과 end값이 필요
	=> Map, map, Hashmap 상관없이 사용가능
	- 목적 : 입력한 시작값과 끝값 사이가 평균인 학생의 모든 정보를 조회
	-->
	<select id="selectStudentByAve" parameterType="Map" resultType="Student">
		<![CDATA[
		SELECT STU_NO, NAME, KOR, ENG, MATH, AVE, GRADE
		  FROM STUDENT
		 WHERE AVE >= #{begin} AND AVE <= #{end}
		 ]]>
		 <!-- => <![CDATA[내용]]> : 해당 범위 안에 있는 내용을 전부 일반문자로 인식하게 만들어준다 
		 => <=가 태그를 여는것으로 인식하는 오류를 방지
		 -->
	</select>
	
	<!-- 6. 평균범위 조회 : 개수  -->
	<select id="selectStudentByAveCount" parameterType="Map" resultType="int">
		SELECT COUNT(*) 
		  FROM STUDENT
		 WHERE AVE >= #{begin} AND AVE <![CDATA[ <= ]]> #{end}
	</select>
	
	<!-- 7. 평균범위조회 : 평균  -->
	<select id="selectStudentByAveAverage" parameterType="Map" resultType="double">
		SELECT NVL(AVG(AVE), 0)
		  FROM STUDENT
		 WHERE AVE >= #{begin} AND AVE <![CDATA[ <= ]]> #{end}
	</select>
	<!-- => 쿼리문은 평균, 최대, 최소, 합계는 없으면 'null'값을 반환 
 		 => 해결 : NVL 함수를 이용-->
 
 	<delete id ="deleteStudent" parameterType="int">
 	DELETE 
 	  FROM STUDENT
 	 WHERE STU_NO = #{stuNo}	
 	</delete>
 	<!-- => DB에 저장된 STU_NO의 값과 DAO를 통해 전해진 요청한 stuNo의 값이 일치하면 삭제 -->
	
 
 <!--////////////////////////////////////////////////////////////////////////////////////////////////  -->
 
 
 		
 		
 		
</mapper>