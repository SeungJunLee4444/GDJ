[3] SELECT

1. SELECT의 특징
1) 쿼리문 실행 : executeQuery() 사용
(!= DDL : execute(), 입력,수정,삭제 : executeUpdate())

2) 1)의 실행결과를 ResultSet에 저장
=> ResultSet 사용시, next()메서드를 통해 데이터를 한 행 단위로 조회할 수 있다
=> next()는 성공시 true, 실패시 false반환



=> 실행결과가 ResultSet 객체
=> ResultSet 객체는 테이블을 행(Row) 단위로 스캔하고 가져올 수 있는 객체
=> next() 메서드를 이용해서 행단위로 스캔한다								&
(DB의 행이 8개면 8번 반복해야하기 때문에, WHILE 또는 IF문을 사용한다)
(행이 몇개인지 모를때는 WHILE, 행이 몇개인지 알때는 IF문 사용)

2. 종류
* SELECT ONE과 SELECT ALL의 차이
=> DTO 저장시 DTO 클래스 하나냐, LIST<DTO>냐에 따라 다르다

1) SELECT ONE											
* SELECT문의 결과가 단일행인 경우를 말함
* 경우 (1) PK, UK 칼럼의 값을 동등비교(=) / 경우 (2) 집계함수 사용						& 단일행 조건
* DTO 하나에 저장

ex)
(1) SELECT 문 작성
----------------------------------------------------------------------------------------------------------------
String sql = "SELECT BOARD_NO, TITLE, CONTENT, HIT, CREATE_DATE FROM BOARD WHERE BOARD_NO = 1";	& SELECT 문
----------------------------------------------------------------------------------------------------------------
=> BOARD_NO가 1인 행을 조회

(2) 쿼리문 사전 생성
--------------------------------------------------------
ps = con.prepareStatement(sql);
--------------------------------------------------------

(3) 쿼리문 실행
--------------------------------------------------------
rs = ps.executeQuery();
--------------------------------------------------------
=> SELECT문의 실행은 executeQuery();									& SELECT 실행

(4) 조회
if(rs.next()) {

* rs(ResultSet)객체를 이용해 칼럼의값을 가져올 수 있음
(방법1) : 칼럼의 이름으로 조회
--------------------------------------------------------
rs.getInt("BOARD_NO")
rs.getString("TITLE")
rs.getString("CONTENT")
rs.getInt("HIT")
rs.getDate("CREATE_DATE")	
--------------------------------------------------------	

(방법2) : 칼럼의 순서로 조회(1부터 시작)
--------------------------------------------------------
rs.getInt(1)
rs.getString(2)
rs.getString(3)
rs.getInt(4)
rs.getDate(5)
}
--------------------------------------------------------

--------------------------------------------------------
int board_no = rs.getInt("BOARD_NO");
String title = rs.getString("TITLE");
String content = rs.getString("CONTENT");
int hit = rs.getInt("HIT");
Date create_date = rs.getDate("CREATE_DATE"); 		(DB에서 DATE타입은 자바에서도 DATE타입)		& DATE 타입
--------------------------------------------------------

(5) 조회한 데이터를 저장 및 확인
--------------------------------------------------------
Board board = new Board();
	board.setBoard_no(board_no);
	board.setTitle(title);
	board.setContent(content);
	board.setHit(hit);
	board.setCreate_date(create_date);
System.out.println(board.toString());			(DTO에 TOSTRING추가)
--------------------------------------------------------

(6) try-catch 마무리
--------------------------------------------------------
} catch (Exception e) {
		e.printStackTrace();
	} finally {
		try {
		if( rs != null)
			rs.close();
		if( ps != null)
			ps.close();
		if( con != null)
			con.close();
		} catch (Exception e) {
		e.printStackTrace();
	}
}
--------------------------------------------------------