& db(2)
* 오라클 관리자 계정 
(1) sys : 더 큰 권한을 가진 계정
(1) 접속방법
/as sysdba : 시스템 관리하는 사람(oper보다 더 윗등급 권한을 지님)
/as sysoper: 시스템 사용하는 사람

(2) system : sys보다 작은 권한을 지닌 계정
* db관리는 시스템 계정이 아닌 user 계정에 권한을 부여하여 사용해야한다


1. 데이터 사전(data dictionary = system catalog)
=> db에 저장된 정보를 요약한 정보(메타 데이터)
(* 메타 데이터는 어떤 정보를 설명하기 위한 데이터를 말한다, 일종의 개요)  

1) 종류
(1) DBA_ : 데이터 베이스 전체에 포함된 모든 객체에 대한 정보를 말한다
ex) DBA_USERS : 사용자에 대한 정보, DBA_TABLES : 테이블에 대한 정보
(2) USER_: 자신이 생성한 모든 객체에 대한 정보
(3) ALL_	: 자신이 생성한 객체 + 다른 사용자가 만든 객체 정보 중 볼수 있는 정보

-----------------------------------------------------------------

2. scott, hr 계정 활성화
* 둘다 SYS 등 관리자 계정으로 작업을 시행해야한다
1) scott
=> 초기 연습용 계정, 잠김상태를 풀어줘야함
(1) sys / as sysdba
(2) ALTER USER SCOTT IDENTIFIED
* 접속에 exist 오류 발생시 scptt.sql을 실행시키면 된다
=> cmd에 @C:\oraclexe\app\oracle\product\11.2.0\server\rdbms\admin\scott.sql를 입력

* show user을 통해 확인하면 scott 계정을 확인할 수 있다
=> scott.sql 파일 내부에 CONN SCOTT/TIGER 코드가 들어가 있기 때문이다

2) HR
=> sql과 달리 특정 sql파일을 실행시킬 필요가 없음
=> 더 복잡하고 많은 샘플을 가지고있음
(1) 잠금해제
ALTER USER HR ACCOUNT UNLOCK;
(2) 비밀번호 변경
ALTER USER HR IDENTIFIED BY 2222;

-----------------------------------------------------------------

3. rdb 기본용어(이론)
* RDB는 관계형 데이터베이스의 줄임말
=> 데이터를 테이블에 담은 형태
=> 행에는 KEY값을 열에는 속성값이 포함

1. 테이블 
=> 행과 열을 가진 표 형태의 데이터를 의미한다
=> = 릴레이션

2. 테이블구성
1) 행 : 로우, 레코드, 튜플	=> 객체값
2) 열 : 칼럼, 필드, 속성	=> 필드값

3. 테이블 용어
1) 도메인	: 한 칼럼이 가질 수 있는 값들
2) 차수 : degree, 칼럼(열)의 개수
3) 기수 : cardinality, 로우의 개수

4. key 
=> 각 row를 고유하게 식별할 수 있는 칼럼, 칼럼들을 말한다
1) 슈퍼키
=> 모든 칼럼값의 항목들 ex) 고객번호, 아이디, 고객명, 직업 등 열의 항목
2) 후보키
=> 슈퍼키 중에 유일성과 최소성을 지닌 키들을 선청 
* 유일성은 (1) 키의 값들이 중복되지않는지, 최소성은 (2) row값을 식별하기 위한 최소한의 칼럼만을 선정, 하는것을 말한다
3) 기본키 **
=> 후보키 중에서 선택한 키를 말하며, 마찬가지로 유일성, 최소성의 특징을 가지고 있다
=> 기본키는 개체무결성의 특징을 지니는데, 이는 (1) null값이 없음, (2) 중복값 금지를 의미한다

(1) 기본키의 종류
자연키 : 실제로 존재하는 데이터를 바탕으로 추출한 키  ex) 고객명, 휴대폰번호, 주민번호 등
인공키 : 실제로 없는 데이터를 인위적으로 추가한 키     ex) 고객번호

4) 대체키
=> 기본키로 선정되지 못한 모든 키

5) 외래키
=> 다른 테이블과의 관계를 맺기위한 키
=> 외래키는 참조무결성의 특징을 지니는데, 이는 
(1) 관계를 맺은 테이블의 키의 도메인을 가지고 있어야하며,ex) 학번 domain을 외래키로 하였는데, 다른 domain값을 입력
(2) 괜계를 맺은 테이블에 없는 데이터를 가질 수 없다	ex) 학번 domain이 1~5 	, 참조한 외래키에 9?

=> 외래키는 중복 가능하고, null도 가능	ex) 상품테이블 -> 주문목록테이블(상품번호는 중복이 당연히 가능)

-----------------------------------------------------------------

4. rdb 모델링(이론)

1) 1 대 다 관계
=> 기본키가 있는 테이블은 중복x, null값이 안되지만
=> 외래키로서 사용되는 테이블은 기본키의 값을 중복사용도 가능하기 때문에 이를 1대다 관계라한다
* 학교와 학생은 일대다 관계로,
중복되지않는 기본키 학생번호를 외래키로서 두 테이블간에 관계를 형성한다

2) 다 대 다 관계
ex) 여러 학생이 여러 과목을 수강신청하는경우
=> 구현 불가능
=> 학생 테이블, 과목 테이블을 만들고, 수강신청 테이블과 1대 다 관계를 맿는식으로 해결한다

ex) 부서, 사원, 프로젝트 테이블이 있고, 부서와 프로젝트가 다대다관계기 때문에,
새로운 테이블을 생성해야한다(프로젝트 진행 테이블)

-----------------------------------------------------------------

5. rdb 오브젝트 생성(이론/실습)

1) 개념적설계(er diagram)
=> db 오브젝트 설개를 위함
* 작성시 규칙
개체 : 사각형(row)
속성 : 타원(column)
관계 : 마름모(relationship)

2) 데이터타입
(1) NUMBER	: 자바의 int
=> NUMBER은 크기가 없을 수도 있음
VARCHAR2	: 자바의 string
DATE		: 자바의 date 클래스
CHAR		: 자바의 string과 같음(char x)

* 참조한 테이블과 참조된 테이블은 해당 키의 타입과 크기가 같아야한다(칼럼명은 달라도 상관없음)

3) 테이블 읽는법
* 크기 : 기본적으로 byte값
* nn   : not null(공백불가능)
* uq   : 중복안됨
* pk   : 기본키
* fk    : 외래키

-----------------------------------------------------------------

6. ddl 데이터 정의어 - 쿼리문
=> 데이터 정의어
=> 데이터베이스 객체 추가, 수정, 삭제(사용자, 테이블) * 작업취소 불가능
=> 추가 : create user, create table
=> 수정 : alter user, alter table
=> 삭제 : drop user, drop table     

-----------------------------------------------------------------

7. 테이블 + 모델링 하기
(1) 생성방법
=> 테이블 전부 만들고나서 모델링, 모델링 먼저 한 후에 테이블 만들기    

(2) 생성규칙
=> 타입 : NUMBER, VARCHEAR2, DATE
=> 무결성 제약조건(constraint) : NOT NULL. UNIQUE, CHECK(값의 유효성 검사), PK, FK

(3) 테이블 이름규칙
1) 다른 테이블에서 동일한 데이터를 저장하는 칼럼은 되도록 이름을 같게 하라
2) 영문자, 숫자, 특수문자 사용가능    

ex) CREATE TABLE + 칼럼명 + 데이터 타입 + 제약조건(constraint)

(4) 테이블 생성문
CREATE TABLE VARCHAR2 (15BYTE) NOTNULL PRIMARY KEY

=> VARCHAR2 타입 15바이트 테이블을 생성, 빈값 금지, (유니크는 생략), 기본키 

-----------------------------------------------------------------
& sqldeveloper 
1. 세팅
) 인코딩, 글꼴, 번호



7. 정규화(이론)
=> 이후부터 쿼리문 실습






& 오늘의 쿼리문

1. desc dba_users
=> desc(describe) 명령어 	: 설명
=> users 		: 처음부터 만들어져있는 테이블
=> dba_users		: 데이터베이스_데이터베이스명

2. select username from dba_users;
=> select username 	: 유저명을 보여주세요
=> dba_users		: 데이터베이스 users의~

3. select username, password from dba_users;
=> 유저명, 비밀번호도 보여주세요( *비밀번호는 보여주지않음)

4. select table_name from dba_tables;
=> 전체 테이블 확인

5. auto increment value
=> pk가 숫자 타입일때 자동으로 숫자가 하나씩 증가한다는 것이 정설


2. 칼럼
=> 표의 열


