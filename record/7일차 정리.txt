[1] 클래스

1. 클래스 정의
1) 클래스 : 특정한 필드(속성)을 담고있는 영역
2) 필드	: 클래스에 담긴 속성들
=> 클래스 안에 선언된 변수들을 필드라 부른다 *
3) 객체	: 클래스의 속성들을 사용하기 위해 붙인 임의적인 클래스명 
=> 같은 클래스에서 다른 속성이나 메소드를 참조하기 때문에,
객체명은 임의로 다르게 짓게된다 *

* 객체로 필드를 호출하는 값은, 필드의 데이터타입으로 반환된다 *
* 필드는 배열처럼 초기값이 자동으로 초기화된다
=> string은 null, int는 0, boolean은 false

---------------------------------------------------------------------------------

2. 클래스 사용법
1) 클래스 선언, 생성
ex) 
User user = new User();
2) 필드 생성


3) 필드값 변경
user.id = "admin";					
user.pw = "123456";
user.email = "admin@web.com";
user.point = 1000;					
user.isVip = (user.point >= 10000);

3) 출력
System.out.println(user.id);
System.out.println(user.pw);
System.out.println(user.email);
System.out.println(user.point);
System.out.println(user.isVip);


---------------------------------------------------------------------------------
---------------------------------------------------------------------------------

[2] 메소드
1. 메소드 정의
1) 메소드 : 클래스 내부에 포함된 함수를 메소드라고 한다

2) 형태
ex)
int add(int a, int b) {			
	int result = a + b;			
	return result;				
}
=> int		: 반환 타입 ex) add 메소드를 실행하면, int타입 값을 반환
=> add		: 메소드명  => 임의로 짓는 명칭 
=> (int a, int b)	: 매개변수  ex) add 메소드를 호출하면, int타입 값 2개가 전달되어야 한다는 뜻
		* 일종의 메소드 호출 조건

3) 메소드 사용법
(1) 메소드를 담은 클래스 형성과 메소드 작성
ex) => double 타입 나누기 메소드, int a, b 매개변수
double div(int a, int b) {		
	double result = (double)a / b;
	return result;
}

(2) 메소드 호출
{1} 객체 생성
Calculator calculator = new Calculator();
{2} 메소드 호출
double answer = calculator.add(10, 5);
=> 값을 담으려는 데이터 타입과, 반환하는 메소드의 타입은 같아야 한다 **
{3} 출력
=> System.out.println(answer);

* return 
=> 메소드에서 반환하려는 값의 형태(출력문같은 역할)
* voild 반환타입은 return 값이 없다
* return은 (1) 메소드에서 사용하는 반환값과 (2)조건반복문 탈출용이 있다

---------------------------------------------------------------------------------
---------------------------------------------------------------------------------

[3] 연습문제

* return
* void




















